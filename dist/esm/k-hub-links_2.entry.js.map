{"file":"k-hub-links.k-hub-tiles.entry.js","mappings":";;AAAA,MAAM,YAAY,GAAG,2aAA2a,CAAC;AACjc,wBAAe,YAAY;;MCSd,SAAS;;;yBAEqC,EAAE;;;IAIzD,MAAM,iBAAiB;QACnB,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;QACxC,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAA;QAClC,IAAI,CAAC,SAAS,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,KAAK;YACjC,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,EAAE,CAAA;SAEtD,CAAC,CAAA;KACL;IACD,MAAM,CAAC,GAAG;QACN,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,GAAG,CAAA;KAE7B;IAID,MAAM;QACF,IAAI,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,KAAK,4DAAK,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,IAAG,IAAI,CAAC,KAAK,CAAO,CAAC,CAAC,CAAA;QAElH,OAAO,CAAC,kEAAU,WAAW,CAAW;SAEvC,CAAA;KACJ;;;;ACrCL,MAAM,YAAY,GAAG,4hCAA4hC,CAAC;AACljC,wBAAe,YAAY;;MCMd,SAAS;;;;qBAED,EAAE;0BACG,EAAE;2BACD,EAAE;;IAEzB,iBAAiB;QAEb,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,IAAI;YAC7C,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,CAAC;YACnC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA;YAClD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;YAC3C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAClC,IAAI,KAAK,WAAK,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,IAAG,IAAI,CAAC,KAAK,CAAO,CAAC,CAAC,CAAA;SACpF,CAAC,CAAA;KAEL;IAGD,MAAM,CAAC,GAAG;QACN,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,GAAG,CAAA;KAC7B;IAED,MAAM;QACF,OAAO,CAAC,kEAAU,IAAI,CAAC,WAAW,CAAW;SAC5C,CAAA;KACJ;;;;;;","names":[],"sources":["src/components/k-hub-links/k-hub-links.css?tag=k-hub-links&encapsulation=shadow","src/components/k-hub-links/k-hub-links.tsx","src/components/k-hub-tiles/k-hub-tiles.css?tag=k-hub-tiles&encapsulation=shadow","src/components/k-hub-tiles/k-hub-tiles.tsx"],"sourcesContent":["\r\n:host {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 0 10%;\r\n\r\n}\r\n\r\nh1 {\r\n    text-align: center;\r\n}\r\n\r\nsection {\r\n    display: grid;\r\n    /* grid-template-columns: 1fr 1fr 1fr 1fr; */\r\n    grid-template-columns: repeat(auto-fill, minmax(300px,1fr));\r\n    gap: 1rem;\r\n    border: solid 2px rgb(179, 179, 179);\r\n    border-radius: 15px;\r\n    padding: 15px;\r\n    place-items: center;\r\n\r\n}\r\n\r\ndiv {\r\n    display: grid;\r\n    place-items: center;\r\n    text-align: center;\r\n    font-size: 18px;\r\n    color: rgb(57, 57, 196);\r\n    min-width: 75%;\r\n    /* overflow-wrap: anywhere; */\r\n\r\n\r\n}\r\n\r\ndiv:hover {\r\n    text-decoration: underline;\r\n    transition: .04s;\r\n    cursor: pointer;\r\n}","import { Component, h, State, Prop } from \"@stencil/core\"\r\n\r\n\r\n\r\n@Component({\r\n    tag: 'k-hub-links',\r\n    styleUrl: 'k-hub-links.css',\r\n    shadow: true,\r\n})\r\n\r\nexport class kHubLinks{\r\n\r\n    @State() linksList: { title: string, url: string }[] = []\r\n    @Prop() lList: string\r\n\r\n\r\n    async componentWillLoad() {\r\n        const response = await fetch(this.lList)\r\n        const link = await response.json()\r\n        this.linksList = await link.map(match => {\r\n            return { title: match[\"title\"], url: match[\"url\"] }\r\n\r\n        })\r\n    }\r\n    launch(url) {\r\n        window.location.href = url\r\n       \r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        let maincontent = this.linksList.map(link => (<div onClick={this.launch.bind(this, link.url)}>{link.title}</div>))\r\n\r\n        return [<section>{maincontent}</section>\r\n\r\n        ]\r\n    }\r\n\r\n\r\n\r\n   \r\n}","\r\n\r\n@media(width > 600px){\r\n    :host {\r\n        display: flex; \r\n        flex-direction: column;\r\n        margin: 5% 10%;\r\n    \r\n        div{\r\n            min-width:75%;\r\n            max-width: 75;\r\n        }\r\n    }\r\n}\r\n\r\nsection {\r\n    display: grid;\r\n    /* grid-template-columns: 1fr 1fr 1fr; */\r\n    grid-template-columns: repeat(auto-fill,minmax(450px,1fr));\r\n    gap: 2rem;\r\n    min-height: 30vh;\r\n    /* border: solid 2px; */\r\n    place-items: center;\r\n    \r\n    \r\n\r\n}\r\n\r\ndiv {\r\n    display: grid;\r\n    place-items: center;\r\n    text-align: center;\r\n    border: solid 2px rgb(179, 179, 179);\r\n    font-size: 20px;\r\n    min-width:60%;\r\n    max-width: 60%;\r\n    min-height: 75%;\r\n    border-radius: 15px;\r\n    \r\n}\r\n\r\ndiv:hover {\r\n    background-color: rgb(212, 208, 208);\r\n    /* color: white; */\r\n    /* font-weight: bolder; */\r\n    /* border-color: black; */\r\n    box-shadow: 8px 8px 5px rgb(94, 92, 92);\r\n    transition: .04s;\r\n    \r\n}\r\n\r\n","import { Component, Prop, State, h } from '@stencil/core';\r\n@Component({\r\n    tag: 'k-hub-tiles',\r\n    styleUrl: 'k-hub-tiles.css',\r\n    shadow: true,\r\n})\r\n\r\nexport class kHubTiles {\r\n    @Prop() tList: string\r\n    @State() tiles = []\r\n    @State() tilesClean = []\r\n    @State() maincontent = []\r\n\r\n    componentWillLoad() {\r\n\r\n        Array.from(this.tList.split(\",\")).map(async (item) => {\r\n            const response = await fetch(item);\r\n            this.tiles.push(Array.from(await response.json()))\r\n            this.tilesClean = this.tiles.flat(Infinity)\r\n            this.maincontent = this.tilesClean.map(\r\n                tile => (<div onClick={this.launch.bind(this, tile.url)}>{tile.title}</div>))\r\n        })\r\n\r\n    }\r\n\r\n\r\n    launch(url) {\r\n        window.location.href = url\r\n    }\r\n\r\n    render() {\r\n        return [<section>{this.maincontent}</section>\r\n        ]\r\n    }\r\n\r\n}"],"version":3}